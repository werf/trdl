version: "3"

silent: true

vars:
  built_trdl_bin_path: "trdl"
  reference_sidebar_path: "./_data/sidebars/reference.yml"
  cli_partial_path: "./_data/sidebars/_cli.yml"
  vault_plugin_partial_path: "./_data/sidebars/_vault_plugin.yml"
  reference_partial_path: "./_data/sidebars/_reference.yml"
  language: '{{.language | default "ru"}}'
  imageName: '{{.imageName | default "ghcr.io/werf/trdl-docs"}}'

tasks:
  gen:
    desc: "Generate reference."
    cmds:
      - task: _regen_reference_cli
      - task: _regen_reference_vault_plugin
      - task: _compile

  _regen_reference_cli:
    internal: true
    desc: "Regenerate reference CLI."
    cmds:
      - cd ../client && go install github.com/werf/trdl/client/cmd/trdl
      - "{{.built_trdl_bin_path}} docs ."

  _regen_reference_vault_plugin:
    internal: true
    desc: "Regenerate reference Vault plugin."
    cmds:
      - cd ../server && go install github.com/werf/trdl/server/cmd/vault-plugin-docs
      - vault-plugin-docs generate-jekyll --base-pages-url /reference/vault_plugin --includes-dir _includes/reference/vault_plugin --pages-dir pages_en/reference/vault_plugin --sidebar-yml-path _data/sidebars/_vault_plugin.yml

  _compile:
    desc: "Compile reference sidebar."
    internal: true
    cmds:
      - |
        echo "# This file is generated by the docs/Taskfile" > {{.reference_sidebar_path}}
        echo "# DO NOT EDIT!" >> {{.reference_sidebar_path}}
        echo "" >> {{.reference_sidebar_path}}
        echo "# This is your sidebar TOC. The sidebar code loops through sections here and provides the appropriate formatting." >> {{.reference_sidebar_path}}
        echo "" >> {{.reference_sidebar_path}}
        cat {{.cli_partial_path}} >> {{.reference_sidebar_path}}
        echo "" >> {{.reference_sidebar_path}}
        cat {{.vault_plugin_partial_path}} >> {{.reference_sidebar_path}}
        echo "" >> {{.reference_sidebar_path}}
        cat {{.reference_partial_path}} >> {{.reference_sidebar_path}}

  lint:
    desc: 'Run all linters in parallel. Important vars: "paths".'
    deps:
      - lint:prettier

  lint:prettier:
    desc: "Check if prettier-formatted."
    deps:
      - lint:prettier:yaml

  lint:prettier:yaml:
    desc: "Check if yaml files are prettier-formatted."
    cmds:
      - docker run --rm -v $(pwd):/work -v ./../.prettierignore/:/work/.prettierignore tmknom/prettier -c "**/*.yaml" "**/*.yml"

  format:
    desc: 'Run all code formatters. Important vars: "paths".'
    run: once
    cmds:
      - task: format:prettier

  format:prettier:
    desc: "Format with prettier."
    deps:
      - format:prettier:yaml

  format:prettier:yaml:
    desc: "Check if yaml files are prettier-formatted."
    cmds:
      - docker run --rm -v $(pwd):/work -v ./../.prettierignore/:/work/.prettierignore tmknom/prettier -w "**/*.yaml" "**/*.yml"

  check-broken-links:
    desc: "Check if links in docs is broken."
    cmds:
      - task: jekyll:run-container
      - defer: { task: jekyll:cleanup }
      - task: jekyll:build
      - task: jekyll:check-links

  build:trdl-docs:
    desc: "Build jekyll image for check broken urls."
    cmd: docker build --platform=linux/amd64 -t {{.imageName}} -f jekyll.Dockerfile $(pwd)

  jekyll:run-container:
    desc: Run jekyll/builder:3 container.
    cmds:
      - mkdir -p .jekyll-cache docs/_site
      - chmod 777 .jekyll-cache docs/_site
      - docker run --platform=linux/amd64 -d -v "$(pwd)/:/srv/jekyll" --name trdl_docs {{.imageName}} sh -c "tail -f /dev/null"

  jekyll:build:
    desc: "Build Jekyll site."
    cmds:
      - |
        docker exec trdl_docs sh -c \
        'bundle exec jekyll build --config _config.yml{{if eq .language "ru"}},_config_ru.yml{{end}} --destination docs/_site/'

  jekyll:check-links:
    desc: "Run link checker."
    cmds:
      - |
        docker exec trdl_docs sh -c \
        "bundle exec htmlproofer \
          --allow-hash-href \
          --empty-alt-ignore \
          --check_html \
          --url_ignore 'https://fonts.googleapis.com,https://fonts.gstatic.com' \
          --http-status-ignore '0' \
          docs/_site/"

  jekyll:cleanup:
    desc: "Run cleanup."
    cmd: docker rm -f trdl_docs || true

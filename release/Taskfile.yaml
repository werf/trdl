version: "3"

silent: true

includes:
  release:
    taskfile: https://raw.githubusercontent.com/werf/common-ci/refs/heads/main/Taskfile.format_lint.yml
    flatten: true
    vars:
      paths: "cmd/** pkg/**"
tasks:
  build:
    desc: "Build client dev binary."
    run: once
    cmds:
      - task: build:dev:{{OS}}:{{ARCH}}
        vars:
          extraGoBuildArgs: "{{.extraGoBuildArgs}}"
          raceDetectorEnabled: '{{.raceDetectorEnabled | default "false"}}'
          outputDir: ../bin/trdl-vault

  build:all:
    desc: "Build all client binaries."
    deps:
      - build:dev
      - build:dist

  build:dev:
    desc: "Build all client dev binaries."
    cmds:
      - task: build:dev:linux:amd64
      - task: build:dev:linux:arm64
      - task: build:dev:darwin:amd64
      - task: build:dev:darwin:arm64
      - task: build:dev:windows:amd64

  build:dist:
    desc: "Build all client release binaries."
    cmds:
      - task: build:dist:linux:amd64
      - task: build:dist:linux:arm64
      - task: build:dist:darwin:amd64
      - task: build:dist:darwin:arm64
      - task: build:dist:windows:amd64

  build:test:with-coverage:
    desc: "Build server binary for E2E tests with coverage on linux/amd64."
    cmds:
      - task: build:dev:{{OS}}:{{ARCH}}
        vars:
          extraGoBuildArgs: "-cover -covermode=atomic -coverpkg=./..."
          raceDetectorEnabled: "true"
          outputDir: ../bin/trdl-vault

  build:dev:linux:amd64:
    desc: "Build client dev binary for linux/amd64."
    cmds:
      - task: _build:go
        vars:
          targetOS: "linux"
          targetArch: "amd64"
          outputDir: "{{.outputDir}}"

  build:dev:linux:arm64:
    desc: "Build client dev binary for linux/arm64."
    cmds:
      - task: _build:go
        vars:
          targetOS: "linux"
          targetArch: "arm64"
          outputDir: "{{.outputDir}}"

  build:dev:darwin:amd64:
    desc: "Build client dev binary for darwin/amd64."
    cmds:
      - task: _build:go
        vars:
          targetOS: "darwin"
          targetArch: "amd64"
          outputDir: "{{.outputDir}}"

  build:dev:darwin:arm64:
    desc: "Build client dev binary for darwin/arm64."
    cmds:
      - task: _build:go
        vars:
          targetOS: "darwin"
          targetArch: "arm64"
          outputDir: "{{.outputDir}}"

  build:dev:windows:amd64:
    desc: "Build client dev binary for windows/amd64."
    cmds:
      - task: _build:go
        vars:
          targetOS: "windows"
          targetArch: "amd64"
          outputDir: "{{.outputDir}}"

  build:dist:linux:amd64:
    desc: "Build client release binary for linux/amd64."
    cmds:
      - task: _build:go
        vars:
          targetOS: "linux"
          targetArch: "amd64"
          extraGoBuildArgs: -ldflags="-s -w"
          outputDir: "dist/{{.version}}/linux-amd64/bin/"

  build:dist:linux:arm64:
    desc: "Build client release binary for linux/arm64."
    cmds:
      - task: _build:go
        vars:
          targetOS: "linux"
          targetArch: "arm64"
          extraGoBuildArgs: -ldflags="-s -w"
          outputDir: "dist/{{.version}}/linux-arm64/bin/"

  build:dist:darwin:amd64:
    desc: "Build client release binary for darwin/amd64."
    cmds:
      - task: _build:go
        vars:
          targetOS: "darwin"
          targetArch: "amd64"
          extraGoBuildArgs: -ldflags="-s -w"
          outputDir: "dist/{{.version}}/darwin-amd64/bin/"

  build:dist:darwin:arm64:
    desc: "Build client release binary for darwin/arm64."
    cmds:
      - task: _build:go
        vars:
          targetOS: "darwin"
          targetArch: "arm64"
          extraGoBuildArgs: -ldflags="-s -w"
          outputDir: "dist/{{.version}}/darwin-arm64/bin/"

  build:dist:windows:amd64:
    desc: "Build client release binary for windows/amd64."
    cmds:
      - task: _build:go
        vars:
          targetOS: "windows"
          targetArch: "amd64"
          extraGoBuildArgs: -ldflags="-s -w"
          outputDir: "dist/{{.version}}/windows-amd64/bin/"

  _build:go:
    internal: true
    cmds:
      - |
        go build -o {{.outputDir | default (printf "./bin/%s/%s-%s" .version .targetOS .targetArch)}}/trdl-vault{{if (eq .targetOS "windows")}}.exe{{end}} \
        {{.extraGoBuildArgs}} {{.CLI_ARGS}} github.com/werf/trdl/release/cmd/trdl-vault
    env:
      GOOS: "{{.targetOS}}"
      GOARCH: "{{.targetArch}}"
      CGO_ENABLED: 0

  verify:dist:binaries:
    desc: "Verify that the distributable binaries are built and have correct platform/arch."
    cmds:
      - ./scripts/verify-dist-binaries.sh {{.version}}

  clean:binaries:
    desc: "Clean all built binaries."
    deps:
      - clean:binaries:dev
      - clean:binaries:dist

  clean:binaries:dev:
    desc: "Clean built dev binaries."
    cmds:
      - rm -rf ./bin

  clean:binaries:dist:
    desc: "Clean built release binaries."
    cmds:
      - rm -rf ./dist
